Archive member included because of file (symbol)

/usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_udivmodhi4.o)
                              main.o (__udivmodhi4)
/usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_divmodhi4.o)
                              /tmp/ccwXUcmU.o (__divmodhi4)
/usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_exit.o)
                              /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/crtm328p.o (exit)
/usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_copy_data.o)
                              main.o (__do_copy_data)
/usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_clear_bss.o)
                              main.o (__do_clear_bss)
/usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/libc.a(eerd_block_atmega328p.o)
                              main.o (__eerd_block_m328p)
/usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/libc.a(eerd_byte_atmega328p.o)
                              main.o (__eerd_byte_m328p)
/usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/libc.a(eewr_block_atmega328p.o)
                              main.o (__eewr_block_m328p)
/usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/libc.a(eewr_byte_atmega328p.o)
                              main.o (__eewr_byte_m328p)

Allocating common symbols
Common symbol       size              file

harmonics           0x200             main.o
key_pressed         0x1               main.o
optoloader          0x7               main.o

Discarded input sections

 .data          0x0000000000000000        0x0 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/crtm328p.o
 .bss           0x0000000000000000        0x0 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/crtm328p.o
 .stab          0x0000000000000000      0x6cc /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/crtm328p.o
 .stabstr       0x0000000000000000       0x64 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/crtm328p.o
 .text          0x0000000000000000        0x0 main.o
 .data          0x0000000000000000        0x0 main.o
 .bss           0x0000000000000000        0x0 main.o
 .stab          0x0000000000000000     0x1998 main.o
 .stabstr       0x0000000000000000      0xdc9 main.o
 .bss.sequencer_display_i
                0x0000000000000000        0x1 main.o
 .bss.debounce  0x0000000000000000        0x1 main.o
 .text          0x0000000000000000        0x0 /tmp/ccMcxPmB.o
 .data          0x0000000000000000        0x0 /tmp/ccMcxPmB.o
 .bss           0x0000000000000000        0x0 /tmp/ccMcxPmB.o
 .stab          0x0000000000000000      0x588 /tmp/ccMcxPmB.o
 .stabstr       0x0000000000000000      0x7f1 /tmp/ccMcxPmB.o
 .text.disableSPI
                0x0000000000000000        0x8 /tmp/ccMcxPmB.o
 .text.received_from_spi
                0x0000000000000000        0x6 /tmp/ccMcxPmB.o
 .text          0x0000000000000000        0x0 /tmp/cc2PpL0E.o
 .data          0x0000000000000000        0x0 /tmp/cc2PpL0E.o
 .bss           0x0000000000000000        0x0 /tmp/cc2PpL0E.o
 .stab          0x0000000000000000      0x39c /tmp/cc2PpL0E.o
 .stabstr       0x0000000000000000      0x79a /tmp/cc2PpL0E.o
 .text          0x0000000000000000        0x0 /tmp/ccu9LMII.o
 .data          0x0000000000000000        0x0 /tmp/ccu9LMII.o
 .bss           0x0000000000000000        0x0 /tmp/ccu9LMII.o
 .stab          0x0000000000000000      0x33c /tmp/ccu9LMII.o
 .stabstr       0x0000000000000000      0x7e3 /tmp/ccu9LMII.o
 .rodata.square_table
                0x0000000000000000      0x200 /tmp/ccu9LMII.o
 .rodata.saw_table
                0x0000000000000000      0x200 /tmp/ccu9LMII.o
 .rodata.triangle_table
                0x0000000000000000      0x200 /tmp/ccu9LMII.o
 .text          0x0000000000000000        0x0 /tmp/cc86szwM.o
 .data          0x0000000000000000        0x0 /tmp/cc86szwM.o
 .bss           0x0000000000000000        0x0 /tmp/cc86szwM.o
 .stab          0x0000000000000000      0x528 /tmp/cc86szwM.o
 .stabstr       0x0000000000000000      0x7cb /tmp/cc86szwM.o
 .text.readButton
                0x0000000000000000       0x8c /tmp/cc86szwM.o
 .text          0x0000000000000000        0x0 /tmp/ccksusoQ.o
 .data          0x0000000000000000        0x0 /tmp/ccksusoQ.o
 .bss           0x0000000000000000        0x0 /tmp/ccksusoQ.o
 .stab          0x0000000000000000      0x654 /tmp/ccksusoQ.o
 .stabstr       0x0000000000000000      0x802 /tmp/ccksusoQ.o
 .text.clearDisplay
                0x0000000000000000       0x12 /tmp/ccksusoQ.o
 .text          0x0000000000000000        0x0 /tmp/ccwXUcmU.o
 .data          0x0000000000000000        0x0 /tmp/ccwXUcmU.o
 .bss           0x0000000000000000        0x0 /tmp/ccwXUcmU.o
 .stab          0x0000000000000000      0x678 /tmp/ccwXUcmU.o
 .stabstr       0x0000000000000000      0x8dc /tmp/ccwXUcmU.o
 .text          0x0000000000000000        0x0 /usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_udivmodhi4.o)
 .data          0x0000000000000000        0x0 /usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_udivmodhi4.o)
 .bss           0x0000000000000000        0x0 /usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_udivmodhi4.o)
 .text          0x0000000000000000        0x0 /usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_divmodhi4.o)
 .data          0x0000000000000000        0x0 /usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_divmodhi4.o)
 .bss           0x0000000000000000        0x0 /usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_divmodhi4.o)
 .text          0x0000000000000000        0x0 /usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_exit.o)
 .data          0x0000000000000000        0x0 /usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_exit.o)
 .bss           0x0000000000000000        0x0 /usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_exit.o)
 .text.libgcc   0x0000000000000000        0x0 /usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_exit.o)
 .text          0x0000000000000000        0x0 /usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_copy_data.o)
 .data          0x0000000000000000        0x0 /usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_copy_data.o)
 .bss           0x0000000000000000        0x0 /usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_copy_data.o)
 .text.libgcc   0x0000000000000000        0x0 /usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_copy_data.o)
 .text          0x0000000000000000        0x0 /usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_clear_bss.o)
 .data          0x0000000000000000        0x0 /usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_clear_bss.o)
 .bss           0x0000000000000000        0x0 /usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc   0x0000000000000000        0x0 /usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_clear_bss.o)
 .text          0x0000000000000000        0x0 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/libc.a(eerd_block_atmega328p.o)
 .data          0x0000000000000000        0x0 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/libc.a(eerd_block_atmega328p.o)
 .bss           0x0000000000000000        0x0 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/libc.a(eerd_block_atmega328p.o)
 .stab          0x0000000000000000      0x114 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/libc.a(eerd_block_atmega328p.o)
 .stabstr       0x0000000000000000       0x41 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/libc.a(eerd_block_atmega328p.o)
 .text          0x0000000000000000        0x0 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/libc.a(eerd_byte_atmega328p.o)
 .data          0x0000000000000000        0x0 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/libc.a(eerd_byte_atmega328p.o)
 .bss           0x0000000000000000        0x0 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/libc.a(eerd_byte_atmega328p.o)
 .stab          0x0000000000000000       0x9c /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/libc.a(eerd_byte_atmega328p.o)
 .stabstr       0x0000000000000000       0x40 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/libc.a(eerd_byte_atmega328p.o)
 .text          0x0000000000000000        0x0 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/libc.a(eewr_block_atmega328p.o)
 .data          0x0000000000000000        0x0 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/libc.a(eewr_block_atmega328p.o)
 .bss           0x0000000000000000        0x0 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/libc.a(eewr_block_atmega328p.o)
 .stab          0x0000000000000000       0xa8 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/libc.a(eewr_block_atmega328p.o)
 .stabstr       0x0000000000000000       0x41 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/libc.a(eewr_block_atmega328p.o)
 .text          0x0000000000000000        0x0 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/libc.a(eewr_byte_atmega328p.o)
 .data          0x0000000000000000        0x0 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/libc.a(eewr_byte_atmega328p.o)
 .bss           0x0000000000000000        0x0 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/libc.a(eewr_byte_atmega328p.o)
 .stab          0x0000000000000000       0xf0 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/libc.a(eewr_byte_atmega328p.o)
 .stabstr       0x0000000000000000       0x40 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/libc.a(eewr_byte_atmega328p.o)

Memory Configuration

Name             Origin             Length             Attributes
text             0x0000000000000000 0x0000000000020000 xr
data             0x0000000000800060 0x000000000000ffa0 rw !x
eeprom           0x0000000000810000 0x0000000000010000 rw !x
fuse             0x0000000000820000 0x0000000000000400 rw !x
lock             0x0000000000830000 0x0000000000000400 rw !x
signature        0x0000000000840000 0x0000000000000400 rw !x
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

Address of section .data set to 0x800100
LOAD /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/crtm328p.o
LOAD main.o
LOAD /tmp/ccMcxPmB.o
LOAD /tmp/cc2PpL0E.o
LOAD /tmp/ccu9LMII.o
LOAD /tmp/cc86szwM.o
LOAD /tmp/ccksusoQ.o
LOAD /tmp/ccwXUcmU.o
LOAD /usr/lib/gcc/avr/4.5.3/avr5/libgcc.a
LOAD /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/libc.a
LOAD /usr/lib/gcc/avr/4.5.3/avr5/libgcc.a

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x0000000000000000     0x12ba
 *(.vectors)
 .vectors       0x0000000000000000       0x68 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/crtm328p.o
                0x0000000000000000                __vectors
                0x0000000000000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
                0x0000000000000068                . = ALIGN (0x2)
                0x0000000000000068                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x0000000000000068        0x0 linker stubs
 *(.trampolines*)
                0x0000000000000068                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x0000000000000068                __ctors_start = .
 *(.ctors)
                0x0000000000000068                __ctors_end = .
                0x0000000000000068                __dtors_start = .
 *(.dtors)
                0x0000000000000068                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x0000000000000068        0x0 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/crtm328p.o
                0x0000000000000068                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x0000000000000068        0xc /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/crtm328p.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x0000000000000074       0x16 /usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_copy_data.o)
                0x0000000000000074                __do_copy_data
 .init4         0x000000000000008a       0x10 /usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_clear_bss.o)
                0x000000000000008a                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x000000000000009a        0x8 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/crtm328p.o
 *(.init9)
 *(.text)
 .text          0x00000000000000a2        0x4 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/crtm328p.o
                0x00000000000000a2                __vector_22
                0x00000000000000a2                __vector_1
                0x00000000000000a2                __vector_24
                0x00000000000000a2                __vector_12
                0x00000000000000a2                __bad_interrupt
                0x00000000000000a2                __vector_6
                0x00000000000000a2                __vector_3
                0x00000000000000a2                __vector_25
                0x00000000000000a2                __vector_13
                0x00000000000000a2                __vector_17
                0x00000000000000a2                __vector_19
                0x00000000000000a2                __vector_5
                0x00000000000000a2                __vector_4
                0x00000000000000a2                __vector_9
                0x00000000000000a2                __vector_2
                0x00000000000000a2                __vector_21
                0x00000000000000a2                __vector_15
                0x00000000000000a2                __vector_8
                0x00000000000000a2                __vector_14
                0x00000000000000a2                __vector_10
                0x00000000000000a2                __vector_16
                0x00000000000000a2                __vector_18
                0x00000000000000a2                __vector_20
                0x00000000000000a6                . = ALIGN (0x2)
 *(.text.*)
 .text.setupControlTimer
                0x00000000000000a6       0x44 main.o
                0x00000000000000a6                setupControlTimer
 .text.__vector_23
                0x00000000000000ea      0x2ea main.o
                0x00000000000000ea                __vector_23
 .text.setupSampleRate11kHz
                0x00000000000003d4       0x2e main.o
                0x00000000000003d4                setupSampleRate11kHz
 .text.__vector_7
                0x0000000000000402      0x1d6 main.o
                0x0000000000000402                __vector_7
 .text.main     0x00000000000005d8      0x564 main.o
                0x00000000000005d8                main
 .text.__vector_11
                0x0000000000000b3c      0x3bc main.o
                0x0000000000000b3c                __vector_11
 .text.setupSPI
                0x0000000000000ef8       0x6e /tmp/ccMcxPmB.o
                0x0000000000000ef8                setupSPI
 .text.sendSPI  0x0000000000000f66        0xc /tmp/ccMcxPmB.o
                0x0000000000000f66                sendSPI
 .text.writeMCP492x
                0x0000000000000f72       0x1e /tmp/cc2PpL0E.o
                0x0000000000000f72                writeMCP492x
 .text.setupButtons
                0x0000000000000f90       0x26 /tmp/cc86szwM.o
                0x0000000000000f90                setupButtons
 .text.readKeyboard
                0x0000000000000fb6       0x12 /tmp/cc86szwM.o
                0x0000000000000fb6                readKeyboard
 .text.readSettings
                0x0000000000000fc8       0x14 /tmp/cc86szwM.o
                0x0000000000000fc8                readSettings
 .text.setupDisplay
                0x0000000000000fdc       0x10 /tmp/ccksusoQ.o
                0x0000000000000fdc                setupDisplay
 .text.setDisplay
                0x0000000000000fec        0x6 /tmp/ccksusoQ.o
                0x0000000000000fec                setDisplay
 .text.updateDisplay
                0x0000000000000ff2       0x90 /tmp/ccksusoQ.o
                0x0000000000000ff2                updateDisplay
 .text.disableOptoloader
                0x0000000000001082        0xc /tmp/ccwXUcmU.o
                0x0000000000001082                disableOptoloader
 .text.setupOptoloader
                0x000000000000108e       0x56 /tmp/ccwXUcmU.o
                0x000000000000108e                setupOptoloader
 .text.enableOptoloader
                0x00000000000010e4       0x1c /tmp/ccwXUcmU.o
                0x00000000000010e4                enableOptoloader
 .text.runOptoloader
                0x0000000000001100      0x108 /tmp/ccwXUcmU.o
                0x0000000000001100                runOptoloader
 .text.libgcc   0x0000000000001208       0x28 /usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_udivmodhi4.o)
                0x0000000000001208                __udivmodhi4
 .text.libgcc   0x0000000000001230       0x26 /usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_divmodhi4.o)
                0x0000000000001230                __divmodhi4
                0x0000000000001230                _div
 .text.avr-libc
                0x0000000000001256       0x20 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/libc.a(eerd_block_atmega328p.o)
                0x0000000000001256                __eerd_block_m328p
                0x000000000000125a                __eerd_blraw_m328p
 .text.avr-libc
                0x0000000000001276       0x10 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/libc.a(eerd_byte_atmega328p.o)
                0x0000000000001276                __eerd_byte_m328p
 .text.avr-libc
                0x0000000000001286       0x14 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/libc.a(eewr_block_atmega328p.o)
                0x0000000000001286                __eewr_block_m328p
 .text.avr-libc
                0x000000000000129a       0x1c /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/libc.a(eewr_byte_atmega328p.o)
                0x000000000000129a                __eewr_byte_m328p
                0x000000000000129c                __eewr_r18_m328p
                0x00000000000012b6                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x00000000000012b6        0x0 /usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_exit.o)
                0x00000000000012b6                exit
                0x00000000000012b6                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x00000000000012b6        0x4 /usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_exit.o)
 *(.fini0)
                0x00000000000012ba                _etext = .

.data           0x0000000000800100      0x242 load address 0x00000000000012ba
                0x0000000000800100                PROVIDE (__data_start, .)
 *(.data)
 *(.data*)
 .data.speed    0x0000000000800100        0x1 main.o
                0x0000000000800100                speed
 .data.mode     0x0000000000800101        0x1 main.o
                0x0000000000800101                mode
 .data.scales   0x0000000000800102       0x40 main.o
                0x0000000000800102                scales
 *(.rodata)
 *(.rodata*)
 .rodata.sine_table
                0x0000000000800142      0x200 /tmp/ccu9LMII.o
                0x0000000000800142                sine_table
 *(.gnu.linkonce.d*)
                0x0000000000800342                . = ALIGN (0x2)
                0x0000000000800342                _edata = .
                0x0000000000800342                PROVIDE (__data_end, .)

.bss            0x0000000000800342      0x288
                0x0000000000800342                PROVIDE (__bss_start, .)
 *(.bss)
 *(.bss*)
 .bss.opto_enable_ctr
                0x0000000000800342        0x1 main.o
                0x0000000000800342                opto_enable_ctr
 .bss.keyboard_ctr
                0x0000000000800343        0x1 main.o
                0x0000000000800343                keyboard_ctr
 .bss.sequencer_ctr
                0x0000000000800344        0x1 main.o
                0x0000000000800344                sequencer_ctr
 .bss.msg_ctr   0x0000000000800345        0x1 main.o
                0x0000000000800345                msg_ctr
 .bss.sequencer_i
                0x0000000000800346        0x1 main.o
                0x0000000000800346                sequencer_i
 .bss.sequencer
                0x0000000000800347       0x40 main.o
                0x0000000000800347                sequencer
 .bss.sequencer_metronome
                0x0000000000800387        0x1 main.o
                0x0000000000800387                sequencer_metronome
 .bss.sequencer_metronome_ctr
                0x0000000000800388        0x1 main.o
                0x0000000000800388                sequencer_metronome_ctr
 .bss.sequencer_flag
                0x0000000000800389        0x1 main.o
                0x0000000000800389                sequencer_flag
 .bss.harmonics_amplitudes
                0x000000000080038a        0xa main.o
                0x000000000080038a                harmonics_amplitudes
 .bss.led_refresh_flag
                0x0000000000800394        0x1 main.o
                0x0000000000800394                led_refresh_flag
 .bss.led_display
                0x0000000000800395        0x1 main.o
                0x0000000000800395                led_display
 .bss.read_keyboard_flag
                0x0000000000800396        0x1 main.o
                0x0000000000800396                read_keyboard_flag
 .bss.settings_debounce
                0x0000000000800397        0x1 main.o
                0x0000000000800397                settings_debounce
 .bss.scale_i   0x0000000000800398        0x1 main.o
                0x0000000000800398                scale_i
 .bss.poly_buffer
                0x0000000000800399       0x10 main.o
                0x0000000000800399                poly_buffer
 .bss.poly_i    0x00000000008003a9        0x1 main.o
                0x00000000008003a9                poly_i
 .bss.final.1323
                0x00000000008003aa        0x2 main.o
 .bss.inc.1322  0x00000000008003ac       0x10 main.o
 .bss.msg_mode.1310
                0x00000000008003bc        0x1 main.o
 .bss.temp_harmonics.1309
                0x00000000008003bd        0x4 main.o
 .bss.num_bytes.1308
                0x00000000008003c1        0x1 main.o
 *(COMMON)
 COMMON         0x00000000008003c2      0x208 main.o
                0x00000000008003c2                harmonics
                0x00000000008005c2                key_pressed
                0x00000000008005c3                optoloader
                0x00000000008005ca                PROVIDE (__bss_end, .)
                0x00000000000012ba                __data_load_start = LOADADDR (.data)
                0x00000000000014fc                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x00000000008005ca        0x0
                0x00000000008005ca                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x00000000008005ca                PROVIDE (__noinit_end, .)
                0x00000000008005ca                _end = .
                0x00000000008005ca                PROVIDE (__heap_start, .)

.eeprom         0x0000000000810000       0x41
 *(.eeprom*)
 .eeprom        0x0000000000810000       0x41 main.o
                0x0000000000810000                sequencer_ee
                0x0000000000810040                first_ee
                0x0000000000810041                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab
 *(.stab)

.stabstr
 *(.stabstr)

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment
 *(.comment)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info)
 *(.gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)
OUTPUT(main.elf elf32-avr)
LOAD linker stubs
