Archive member included because of file (symbol)

/usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_exit.o)
                              /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr5/crtm328p.o (exit)
/usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_copy_data.o)
                              main.o (__do_copy_data)
/usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_clear_bss.o)
                              main.o (__do_clear_bss)

Allocating common symbols
Common symbol       size              file

key_pressed         0x1               main.o

Discarded input sections

 .data          0x0000000000000000        0x0 /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr5/crtm328p.o
 .bss           0x0000000000000000        0x0 /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr5/crtm328p.o
 .stab          0x0000000000000000      0x6b4 /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr5/crtm328p.o
 .stabstr       0x0000000000000000       0x64 /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr5/crtm328p.o
 .text          0x0000000000000000        0x0 main.o
 .data          0x0000000000000000        0x0 main.o
 .bss           0x0000000000000000        0x0 main.o
 .stab          0x0000000000000000      0x99c main.o
 .stabstr       0x0000000000000000      0xa48 main.o
 .text.readKeyboard
                0x0000000000000000       0x12 main.o
 .data.channelB
                0x0000000000000000      0x200 main.o
 .data.channelC
                0x0000000000000000      0x200 main.o
 .data.channelD
                0x0000000000000000      0x200 main.o
 .bss.noteA     0x0000000000000000        0x2 main.o
 .bss.noteB     0x0000000000000000        0x2 main.o
 .bss.noteC     0x0000000000000000        0x2 main.o
 .bss.noteD     0x0000000000000000        0x2 main.o
 .bss.keyboard  0x0000000000000000        0x1 main.o
 COMMON         0x0000000000000000        0x1 main.o
 .text          0x0000000000000000        0x0 /tmp/ccwVOhtj.o
 .data          0x0000000000000000        0x0 /tmp/ccwVOhtj.o
 .bss           0x0000000000000000        0x0 /tmp/ccwVOhtj.o
 .stab          0x0000000000000000      0x51c /tmp/ccwVOhtj.o
 .stabstr       0x0000000000000000      0x7d0 /tmp/ccwVOhtj.o
 .text.disableSPI
                0x0000000000000000        0x8 /tmp/ccwVOhtj.o
 .text.received_from_spi
                0x0000000000000000        0x6 /tmp/ccwVOhtj.o
 .text          0x0000000000000000        0x0 /tmp/ccbEWdQD.o
 .data          0x0000000000000000        0x0 /tmp/ccbEWdQD.o
 .bss           0x0000000000000000        0x0 /tmp/ccbEWdQD.o
 .stab          0x0000000000000000      0x378 /tmp/ccbEWdQD.o
 .stabstr       0x0000000000000000      0x771 /tmp/ccbEWdQD.o
 .text          0x0000000000000000        0x0 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_exit.o)
 .data          0x0000000000000000        0x0 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_exit.o)
 .bss           0x0000000000000000        0x0 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_exit.o)
 .text.libgcc   0x0000000000000000        0x0 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_exit.o)
 .text          0x0000000000000000        0x0 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_copy_data.o)
 .data          0x0000000000000000        0x0 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_copy_data.o)
 .bss           0x0000000000000000        0x0 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_copy_data.o)
 .text.libgcc   0x0000000000000000        0x0 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_copy_data.o)
 .text          0x0000000000000000        0x0 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_clear_bss.o)
 .data          0x0000000000000000        0x0 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_clear_bss.o)
 .bss           0x0000000000000000        0x0 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc   0x0000000000000000        0x0 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_clear_bss.o)

Memory Configuration

Name             Origin             Length             Attributes
text             0x0000000000000000 0x0000000000020000 xr
data             0x0000000000800060 0x000000000000ffa0 rw !x
eeprom           0x0000000000810000 0x0000000000010000 rw !x
fuse             0x0000000000820000 0x0000000000000400 rw !x
lock             0x0000000000830000 0x0000000000000400 rw !x
signature        0x0000000000840000 0x0000000000000400 rw !x
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

Address of section .data set to 0x800100
LOAD /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr5/crtm328p.o
LOAD main.o
LOAD /tmp/ccwVOhtj.o
LOAD /tmp/ccbEWdQD.o
LOAD /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a
LOAD /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr5/libc.a
LOAD /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x0000000000000000      0x4ce
 *(.vectors)
 .vectors       0x0000000000000000       0x68 /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr5/crtm328p.o
                0x0000000000000000                __vectors
                0x0000000000000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
                0x0000000000000068                . = ALIGN (0x2)
                0x0000000000000068                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x0000000000000068        0x0 linker stubs
 *(.trampolines*)
                0x0000000000000068                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x0000000000000068                __ctors_start = .
 *(.ctors)
                0x0000000000000068                __ctors_end = .
                0x0000000000000068                __dtors_start = .
 *(.dtors)
                0x0000000000000068                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x0000000000000068        0x0 /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr5/crtm328p.o
                0x0000000000000068                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x0000000000000068        0xc /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr5/crtm328p.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x0000000000000074       0x16 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_copy_data.o)
                0x0000000000000074                __do_copy_data
 .init4         0x000000000000008a       0x10 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_clear_bss.o)
                0x000000000000008a                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x000000000000009a        0x8 /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr5/crtm328p.o
 *(.init9)
 *(.text)
 .text          0x00000000000000a2        0x4 /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr5/crtm328p.o
                0x00000000000000a2                __vector_22
                0x00000000000000a2                __vector_1
                0x00000000000000a2                __vector_24
                0x00000000000000a2                __vector_12
                0x00000000000000a2                __bad_interrupt
                0x00000000000000a2                __vector_6
                0x00000000000000a2                __vector_3
                0x00000000000000a2                __vector_23
                0x00000000000000a2                __vector_25
                0x00000000000000a2                __vector_13
                0x00000000000000a2                __vector_17
                0x00000000000000a2                __vector_19
                0x00000000000000a2                __vector_7
                0x00000000000000a2                __vector_5
                0x00000000000000a2                __vector_4
                0x00000000000000a2                __vector_9
                0x00000000000000a2                __vector_2
                0x00000000000000a2                __vector_21
                0x00000000000000a2                __vector_15
                0x00000000000000a2                __vector_8
                0x00000000000000a2                __vector_14
                0x00000000000000a2                __vector_10
                0x00000000000000a2                __vector_16
                0x00000000000000a2                __vector_18
                0x00000000000000a2                __vector_20
                0x00000000000000a6                . = ALIGN (0x2)
 *(.text.*)
 .text.setupButtons
                0x00000000000000a6       0x26 main.o
                0x00000000000000a6                setupButtons
 .text.readButton
                0x00000000000000cc       0x7a main.o
                0x00000000000000cc                readButton
 .text.setupSampleRate
                0x0000000000000146       0x2e main.o
                0x0000000000000146                setupSampleRate
 .text.__vector_11
                0x0000000000000174      0x1fa main.o
                0x0000000000000174                __vector_11
 .text.main     0x000000000000036e       0xb8 main.o
                0x000000000000036e                main
 .text.setupSPI
                0x0000000000000426       0x7a /tmp/ccwVOhtj.o
                0x0000000000000426                setupSPI
 .text.sendSPI  0x00000000000004a0        0xc /tmp/ccwVOhtj.o
                0x00000000000004a0                sendSPI
 .text.writeMCP492x
                0x00000000000004ac       0x1e /tmp/ccbEWdQD.o
                0x00000000000004ac                writeMCP492x
                0x00000000000004ca                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x00000000000004ca        0x0 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_exit.o)
                0x00000000000004ca                exit
                0x00000000000004ca                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x00000000000004ca        0x4 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_exit.o)
 *(.fini0)
                0x00000000000004ce                _etext = .

.data           0x0000000000800100      0x240 load address 0x00000000000004ce
                0x0000000000800100                PROVIDE (__data_start, .)
 *(.data)
 *(.data*)
 .data.channelA
                0x0000000000800100      0x200 main.o
                0x0000000000800100                channelA
 .data.scales   0x0000000000800300       0x40 main.o
                0x0000000000800300                scales
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x0000000000800340                . = ALIGN (0x2)
                0x0000000000800340                _edata = .
                0x0000000000800340                PROVIDE (__data_end, .)

.bss            0x0000000000800340       0x18
                0x0000000000800340                PROVIDE (__bss_start, .)
 *(.bss)
 *(.bss*)
 .bss.poly_buffer
                0x0000000000800340        0xa main.o
                0x0000000000800340                poly_buffer
 .bss.poly_i    0x000000000080034a        0x1 main.o
                0x000000000080034a                poly_i
 .bss.scale_i   0x000000000080034b        0x1 main.o
                0x000000000080034b                scale_i
 .bss.keyboard.1429
                0x000000000080034c        0x1 main.o
 .bss.j.1428    0x000000000080034d        0x1 main.o
 .bss.final.1427
                0x000000000080034e        0x2 main.o
 .bss.iD.1426   0x0000000000800350        0x2 main.o
 .bss.iC.1425   0x0000000000800352        0x2 main.o
 .bss.iB.1424   0x0000000000800354        0x2 main.o
 .bss.iA.1423   0x0000000000800356        0x2 main.o
 *(COMMON)
                0x0000000000800358                PROVIDE (__bss_end, .)
                0x00000000000004ce                __data_load_start = LOADADDR (.data)
                0x000000000000070e                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x0000000000800358        0x0
                0x0000000000800358                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x0000000000800358                PROVIDE (__noinit_end, .)
                0x0000000000800358                _end = .
                0x0000000000800358                PROVIDE (__heap_start, .)

.eeprom         0x0000000000810000        0x0
 *(.eeprom*)
                0x0000000000810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab
 *(.stab)

.stabstr
 *(.stabstr)

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment
 *(.comment)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info)
 *(.gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)
OUTPUT(main.elf elf32-avr)
LOAD linker stubs
