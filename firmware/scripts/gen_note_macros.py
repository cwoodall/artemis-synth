from cw_fixedpoint import *

# A list of different frequencies for different notes. Stolen from a table on the internet. Conveniently tab seperated
k = """
C0 	16.35 	2100.
C#0/Db0 	17.32 	1990.
D0 	18.35 	1870.
D#0/Eb0 	19.45 	1770.
E0 	20.60 	1670.
F0 	21.83 	1580.
F#0/Gb0 	23.12 	1490.
G0 	24.50 	1400.
G#0/Ab0 	25.96 	1320.
A0 	27.50 	1250.
A#0/Bb0 	29.14 	1180.
B0 	30.87 	1110.
C1 	32.70 	1050.
C#1/Db1 	34.65 	996.
D1 	36.71 	940.
D#1/Eb1 	38.89 	887.
E1 	41.20 	837.
F1 	43.65 	790.
F#1/Gb1 	46.25 	746.
G1 	49.00 	704.
G#1/Ab1 	51.91 	665.
A1 	55.00 	627.
A#1/Bb1 	58.27 	592.
B1 	61.74 	559.
C2 	65.41 	527.
C#2/Db2 	69.30 	498.
D2 	73.42 	470.
D#2/Eb2 	77.78 	444.
E2 	82.41 	419.
F2 	87.31 	395.
F#2/Gb2 	92.50 	373.
G2 	98.00 	352.
G#2/Ab2 	103.83 	332.
A2 	110.00 	314.
A#2/Bb2 	116.54 	296.
B2 	123.47 	279.
C3 	130.81 	264.
C#3/Db3 	138.59 	249.
D3 	146.83 	235.
D#3/Eb3 	155.56 	222.
E3 	164.81 	209.
F3 	174.61 	198.
F#3/Gb3 	185.00 	186.
G3 	196.00 	176.
G#3/Ab3 	207.65 	166.
A3 	220.00 	157.
A#3/Bb3 	233.08 	148.
B3 	246.94 	140.
C4 	261.63 	132.
C#4/Db4 	277.18 	124.
D4 	293.66 	117.
D#4/Eb4 	311.13 	111.
E4 	329.63 	105.
F4 	349.23 	98.8
F#4/Gb4 	369.99 	93.2
G4 	392.00 	88.0
G#4/Ab4 	415.30 	83.1
A4 	440.00 	78.4
A#4/Bb4 	466.16 	74.0
B4 	493.88 	69.9
C5 	523.25 	65.9
C#5/Db5 	554.37 	62.2
D5 	587.33 	58.7
D#5/Eb5 	622.25 	55.4
E5 	659.26 	52.3
F5 	698.46 	49.4
F#5/Gb5 	739.99 	46.6
G5 	783.99 	44.0
G#5/Ab5 	830.61 	41.5
A5 	880.00 	39.2
A#5/Bb5 	932.33 	37.0
B5 	987.77 	34.9
C6 	1046.50 	33.0
C#6/Db6 	1108.73 	31.1
D6 	1174.66 	29.4
D#6/Eb6 	1244.51 	27.7
E6 	1318.51 	26.2
F6 	1396.91 	24.7
F#6/Gb6 	1479.98 	23.3
G6 	1567.98 	22.0
G#6/Ab6 	1661.22 	20.8
A6 	1760.00 	19.6
A#6/Bb6 	1864.66 	18.5
B6 	1975.53 	17.5
C7 	2093.00 	16.5
C#7/Db7 	2217.46 	15.6
D7 	2349.32 	14.7
D#7/Eb7 	2489.02 	13.9
E7 	2637.02 	13.1
F7 	2793.83 	12.3
F#7/Gb7 	2959.96 	11.7
G7 	3135.96 	11.0
G#7/Ab7 	3322.44 	10.4
A7 	3520.00 	9.8
A#7/Bb7 	3729.31 	9.3
B7 	3951.07 	8.7
C8 	4186.01 	8.2
C#8/Db8 	4434.92 	7.8
D8 	4698.64 	7.3
D#8/Eb8 	4978.03 	6.9
"""

k = k.replace(' ', '')
k = k.split("\n")
table = k[1:len(k)-1]

# Do all of the math in floating point and convert to UFixedPoint at the end. Works better
freq_table = [row.split('\t') for row in table]
note_names = [n[0].split('/')[0] for n in freq_table]
note_names = [n.replace('#', 's') for n in note_names]
notes = [float(n[1]) for n in freq_table]
samples = 256
sample_rate = 22e3
freqs = [((note)*(samples))/(sample_rate) for note in notes]

# Set Fixed Point parameters Qm.q
m = 12
q = 7
freqs = [UFixedPoint(freq, m, q) for freq in freqs]

print """/**
 * Note Table with Parameters:
 * - UFixedPoint Q%d.%d 
 * - Sample Rate: %d
 * - Sample Frequency %d
 *
 * Generated by gen_note_macros.py
 * Christopher Woodall (c) 2012
 * MIT LICENSE
 * Happy Robot Labs (happyrobotlabs.com), BU EDF (edf.bu.edu)
 *
 * Generates macros for increments for looking into wave tables for
 * note frequencies between C0 and C8
 */
#ifndef _notes_h_
#define _notes_h_
<<<<<<< HEAD
""" % (m, q, samples, sample_rate)
=======

#define NOTES_BASE %d
""" % (m, q, samples, sample_rate, q)
>>>>>>> b722b5b7f2baadd6f2a5fa7d339ea1ab79f4ff35
for i in range(len(note_names)):
    print "#define %s %s" % (note_names[i], freqs[i].hex())

print "\n#endif"
print
